name: caller_release_RCS_UI
run-name: Create RCS_UI release '${{ inputs.release_version_number }}'
on:
  workflow_dispatch:
    inputs:
      notes:
        description: "Release notes"
        required: false
        type: string
        default: ''
      release_version_number:
        description: "Provide release version number"
        required: true
        type: string
env:
  # Set the environment with secrets provided by the caller (secrets section)
  GIT_AUTHOR_NAME: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
  GIT_AUTHOR_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}
  GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
  GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}

jobs:

  release_prepare_no_maven: # prepare for a release in scm, creates the tag and release branch with the proper release versions
    name: Call release prepare
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-prepare-no-maven.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
    secrets:
      GIT_COMMIT_USERNAME_BOT: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
      GIT_COMMIT_AUTHOR_EMAIL_BOT: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}

  release_docker:
    name: Call publish docker
    needs: [ release_prepare_no_maven ]
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-publish-docker.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
      release_tag_ref: ${{ needs.release_prepare_no_maven.outputs.release_tag_ref }}
      SERVICE_NAME: ui/rcs
      with_maven: false
      GAR_RELEASE_REPO: ${{ vars.GAR_RELEASE_REPO }}
    secrets:
      GCR_CREDENTIALS_JSON: ${{ secrets.DEV_GAR_KEY }}

  release_helm:
    name: Call publish helm
    needs: [ release_prepare_no_maven ]
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-publish-helm.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
      release_tag_ref: ${{ needs.release_prepare_no_maven.outputs.release_tag_ref }}
      root_helm_directory: "_infra/helm/securebanking-ui"
    secrets:
      FR_ARTIFACTORY_USER_ACCESS_TOKEN: ${{ secrets.FR_ARTIFACTORY_USER_ACCESS_TOKEN }}
      FR_HELM_REPO: ${{ secrets.FR_HELM_REPO }}

  update_version:
    name: Update version for the next development iteration
    needs: [ release_prepare_no_maven, release_docker, release_helm ]
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        id: checkout_branch
        name: checkout release branch
        with:
          ref: ${{ needs.release_prepare_no_maven.outputs.release_branch_ref }}

      # https://github.com/crazy-max/ghaction-import-gpg
      # https://httgp.com/signing-commits-in-github-actions/
      # Prepare the environment to sign the commits
      - name: Import GPG key
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY_BOT }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE_BOT }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: update version
        id: update_version
        working-directory: ./secure-api-gateway-ob-uk-ui-rcs
        run: |
          npm version patch --no-git-tag-version

      - name: push changes
        id: push_changes
        run: |
          git add secure-api-gateway-ob-uk-ui-rcs/package.json secure-api-gateway-ob-uk-ui-rcs/package-lock.json
          git commit -m "Prepare for the next development iteration"
          git push -f origin ${{ needs.release_prepare_no_maven.outputs.release_branch_ref }}

  release_draft_and_pr:
    name: Call publish draft and PR
    needs: [ release_prepare_no_maven, release_docker, release_helm, update_version ]
    uses: SecureApiGateway/secure-api-gateway-parent/.github/workflows/release-publish-draft-and-pr.yml@master
    with:
      release_version_number: ${{ inputs.release_version_number }}
      release_branch_ref: ${{ needs.release_prepare_no_maven.outputs.release_branch_ref }}
      release_tag_ref: ${{ needs.release_prepare_no_maven.outputs.release_tag_ref }}
      release_notes: ${{ inputs.notes }}


