name: pull-request

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  HELM_DIRECTORY: _infra/helm/
  SERVICE_NAME: securebanking-ui
  PR_NUMBER: pr-${{ github.event.number }}

jobs:
  pr:
    runs-on: ubuntu-latest
    name: Create pr docker tag
    outputs:
      prTag: ${{ steps.tag.outputs.pr_number }}
    steps:
      - uses: actions/checkout@v3

      - name: pr docker tag
        id: tag
        run: |
          PR=$(echo "$GITHUB_REF" | awk -F / '{print $3}')
          echo "$PR"
          echo ::set-output name=pr_number::pr-"$PR"

  rcs:
    runs-on: ubuntu-latest
    name: test and package rcs ui
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: lint
        run: |
          cd securebanking-rcs-ui
          npm ci
          npm run lint

      - name: test
        run: |
          cd securebanking-rcs-ui
          npm run test
      # https://github.com/google-github-actions/setup-gcloud#authorization
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - run: |
          gcloud auth configure-docker

      - name: Build Docker Image
        run: |
          make docker tag=${{ env.PR_NUMBER }} service=rcs

  tests:
    runs-on: ubuntu-latest
    name: Check PR integrity
    needs: [rcs]
    steps:
      - uses: actions/checkout@v3

      - name: template helm
        run: |
          helm template $HELM_DIRECTORY/$SERVICE_NAME

      - name: 'Deploy Service'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v TAG=${{ env.PR_NUMBER }} -v SERVICE_NAME=ui -v ENVIRONMENT=${{ github.actor }} -v BRANCH=${{ github.head_ref }}'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
        id: run-pipeline
